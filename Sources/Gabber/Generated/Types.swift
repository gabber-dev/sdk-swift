// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Create a new session
    ///
    /// Creates a new session based on the input request data
    ///
    /// - Remark: HTTP `POST /api/v1/session/start`.
    /// - Remark: Generated from `#/paths//api/v1/session/start/post`.
    func post_sol_api_sol_v1_sol_session_sol_start(_ input: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input) async throws -> Operations.post_sol_api_sol_v1_sol_session_sol_start.Output
    /// Get a session by id
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get`.
    func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(_ input: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output
    /// Update a session by id
    ///
    /// - Remark: HTTP `PUT /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put`.
    func put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(_ input: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input) async throws -> Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output
    /// Get session messages
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/messages`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get`.
    func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages(_ input: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output
    /// Get a session timeline
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/timeline`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get`.
    func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline(_ input: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output
    /// Get a list of personas
    ///
    /// - Remark: HTTP `GET /api/v1/persona/list`.
    /// - Remark: Generated from `#/paths//api/v1/persona/list/get`.
    func get_sol_api_sol_v1_sol_persona_sol_list(_ input: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Input) async throws -> Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output
    /// Get a list of scenarios
    ///
    /// - Remark: HTTP `GET /api/v1/scenario/list`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/list/get`.
    func get_sol_api_sol_v1_sol_scenario_sol_list(_ input: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Input) async throws -> Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output
    /// Get a list of voices
    ///
    /// - Remark: HTTP `GET /api/v1/voice/list`.
    /// - Remark: Generated from `#/paths//api/v1/voice/list/get`.
    func get_sol_api_sol_v1_sol_voice_sol_list(_ input: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Input) async throws -> Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output
    /// Preview a voice
    ///
    /// Previews a voice based on the input text
    ///
    /// - Remark: HTTP `POST /api/v1/voice/preview`.
    /// - Remark: Generated from `#/paths//api/v1/voice/preview/post`.
    func post_sol_api_sol_v1_sol_voice_sol_preview(_ input: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output
    /// End a session
    ///
    /// - Remark: HTTP `POST /api/v1/session/{session_id}/end`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post`.
    func post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end(_ input: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input) async throws -> Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output
    /// Request new human token
    ///
    /// Requests a token for a human
    ///
    /// - Remark: HTTP `POST /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/post`.
    func post_sol_api_sol_v1_sol_usage_sol_token(_ input: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input) async throws -> Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output
    /// Update human usage limits
    ///
    /// Updates the usage limits of a human
    ///
    /// - Remark: HTTP `PUT /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/put`.
    func put_sol_api_sol_v1_sol_usage_sol_token(_ input: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input) async throws -> Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output
    /// Get usage limits
    ///
    /// Gets the usage limits of a token
    ///
    /// - Remark: HTTP `GET /api/v1/usage/limits`.
    /// - Remark: Generated from `#/paths//api/v1/usage/limits/get`.
    func get_sol_api_sol_v1_sol_usage_sol_limits(_ input: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Input) async throws -> Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output
    /// Clone a voice
    ///
    /// Creates a new cloned voice based on the input audio file
    ///
    /// - Remark: HTTP `POST /api/v1/voice/clone`.
    /// - Remark: Generated from `#/paths//api/v1/voice/clone/post`.
    func post_sol_api_sol_v1_sol_voice_sol_clone(_ input: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output
    /// Generate voice
    ///
    /// Generates speech from input text and specified voice
    ///
    /// - Remark: HTTP `POST /api/v1/voice/generate`.
    /// - Remark: Generated from `#/paths//api/v1/voice/generate/post`.
    func post_sol_api_sol_v1_sol_voice_sol_generate(_ input: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output
    /// Delete a voice
    ///
    /// - Remark: HTTP `DELETE /api/v1/voice/{voice_id}`.
    /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete`.
    func delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_(_ input: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input) async throws -> Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output
    /// Delete a persona
    ///
    /// - Remark: HTTP `DELETE /api/v1/persona/{persona_id}`.
    /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete`.
    func delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_(_ input: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input) async throws -> Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output
    /// Delete a scenario
    ///
    /// - Remark: HTTP `DELETE /api/v1/scenario/{scenario_id}`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete`.
    func delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_(_ input: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input) async throws -> Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Create a new session
    ///
    /// Creates a new session based on the input request data
    ///
    /// - Remark: HTTP `POST /api/v1/session/start`.
    /// - Remark: Generated from `#/paths//api/v1/session/start/post`.
    public func post_sol_api_sol_v1_sol_session_sol_start(
        headers: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Headers = .init(),
        body: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Body
    ) async throws -> Operations.post_sol_api_sol_v1_sol_session_sol_start.Output {
        try await post_sol_api_sol_v1_sol_session_sol_start(Operations.post_sol_api_sol_v1_sol_session_sol_start.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get a session by id
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get`.
    public func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(
        path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path,
        headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers = .init()
    ) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output {
        try await get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a session by id
    ///
    /// - Remark: HTTP `PUT /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put`.
    public func put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(
        path: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path,
        headers: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers = .init(),
        body: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Body
    ) async throws -> Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output {
        try await put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_(Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get session messages
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/messages`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get`.
    public func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages(
        path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Path,
        headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Headers = .init()
    ) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output {
        try await get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a session timeline
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/timeline`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get`.
    public func get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline(
        path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Path,
        headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Headers = .init()
    ) async throws -> Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output {
        try await get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a list of personas
    ///
    /// - Remark: HTTP `GET /api/v1/persona/list`.
    /// - Remark: Generated from `#/paths//api/v1/persona/list/get`.
    public func get_sol_api_sol_v1_sol_persona_sol_list(headers: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Input.Headers = .init()) async throws -> Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output {
        try await get_sol_api_sol_v1_sol_persona_sol_list(Operations.get_sol_api_sol_v1_sol_persona_sol_list.Input(headers: headers))
    }
    /// Get a list of scenarios
    ///
    /// - Remark: HTTP `GET /api/v1/scenario/list`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/list/get`.
    public func get_sol_api_sol_v1_sol_scenario_sol_list(headers: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Input.Headers = .init()) async throws -> Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output {
        try await get_sol_api_sol_v1_sol_scenario_sol_list(Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Input(headers: headers))
    }
    /// Get a list of voices
    ///
    /// - Remark: HTTP `GET /api/v1/voice/list`.
    /// - Remark: Generated from `#/paths//api/v1/voice/list/get`.
    public func get_sol_api_sol_v1_sol_voice_sol_list(headers: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Input.Headers = .init()) async throws -> Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output {
        try await get_sol_api_sol_v1_sol_voice_sol_list(Operations.get_sol_api_sol_v1_sol_voice_sol_list.Input(headers: headers))
    }
    /// Preview a voice
    ///
    /// Previews a voice based on the input text
    ///
    /// - Remark: HTTP `POST /api/v1/voice/preview`.
    /// - Remark: Generated from `#/paths//api/v1/voice/preview/post`.
    public func post_sol_api_sol_v1_sol_voice_sol_preview(
        headers: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Headers = .init(),
        body: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Body
    ) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output {
        try await post_sol_api_sol_v1_sol_voice_sol_preview(Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input(
            headers: headers,
            body: body
        ))
    }
    /// End a session
    ///
    /// - Remark: HTTP `POST /api/v1/session/{session_id}/end`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post`.
    public func post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end(
        path: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Path,
        headers: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Headers = .init()
    ) async throws -> Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output {
        try await post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end(Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input(
            path: path,
            headers: headers
        ))
    }
    /// Request new human token
    ///
    /// Requests a token for a human
    ///
    /// - Remark: HTTP `POST /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/post`.
    public func post_sol_api_sol_v1_sol_usage_sol_token(
        headers: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Headers = .init(),
        body: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Body
    ) async throws -> Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output {
        try await post_sol_api_sol_v1_sol_usage_sol_token(Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Update human usage limits
    ///
    /// Updates the usage limits of a human
    ///
    /// - Remark: HTTP `PUT /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/put`.
    public func put_sol_api_sol_v1_sol_usage_sol_token(
        headers: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Headers = .init(),
        body: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Body
    ) async throws -> Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output {
        try await put_sol_api_sol_v1_sol_usage_sol_token(Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get usage limits
    ///
    /// Gets the usage limits of a token
    ///
    /// - Remark: HTTP `GET /api/v1/usage/limits`.
    /// - Remark: Generated from `#/paths//api/v1/usage/limits/get`.
    public func get_sol_api_sol_v1_sol_usage_sol_limits(headers: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Input.Headers = .init()) async throws -> Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output {
        try await get_sol_api_sol_v1_sol_usage_sol_limits(Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Input(headers: headers))
    }
    /// Clone a voice
    ///
    /// Creates a new cloned voice based on the input audio file
    ///
    /// - Remark: HTTP `POST /api/v1/voice/clone`.
    /// - Remark: Generated from `#/paths//api/v1/voice/clone/post`.
    public func post_sol_api_sol_v1_sol_voice_sol_clone(
        headers: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Headers = .init(),
        body: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body
    ) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output {
        try await post_sol_api_sol_v1_sol_voice_sol_clone(Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input(
            headers: headers,
            body: body
        ))
    }
    /// Generate voice
    ///
    /// Generates speech from input text and specified voice
    ///
    /// - Remark: HTTP `POST /api/v1/voice/generate`.
    /// - Remark: Generated from `#/paths//api/v1/voice/generate/post`.
    public func post_sol_api_sol_v1_sol_voice_sol_generate(
        headers: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Headers = .init(),
        body: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Body
    ) async throws -> Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output {
        try await post_sol_api_sol_v1_sol_voice_sol_generate(Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input(
            headers: headers,
            body: body
        ))
    }
    /// Delete a voice
    ///
    /// - Remark: HTTP `DELETE /api/v1/voice/{voice_id}`.
    /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete`.
    public func delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_(
        path: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Path,
        headers: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Headers = .init()
    ) async throws -> Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output {
        try await delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_(Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete a persona
    ///
    /// - Remark: HTTP `DELETE /api/v1/persona/{persona_id}`.
    /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete`.
    public func delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_(
        path: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Path,
        headers: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Headers = .init()
    ) async throws -> Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output {
        try await delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_(Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete a scenario
    ///
    /// - Remark: HTTP `DELETE /api/v1/scenario/{scenario_id}`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete`.
    public func delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_(
        path: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Path,
        headers: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Headers = .init()
    ) async throws -> Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output {
        try await delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_(Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public enum Server1 {
        public static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://app.gabber.dev",
                variables: []
            )
        }
    }
    @available(*, deprecated, renamed: "Servers.Server1.url")
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://app.gabber.dev",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/HistoryMessage`.
        public struct HistoryMessage: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/HistoryMessage/content`.
            public var content: Swift.String
            /// - Remark: Generated from `#/components/schemas/HistoryMessage/import_id`.
            public var import_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/HistoryMessage/role`.
            @frozen public enum rolePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case assistant = "assistant"
                case system = "system"
                case user = "user"
            }
            /// - Remark: Generated from `#/components/schemas/HistoryMessage/role`.
            public var role: Components.Schemas.HistoryMessage.rolePayload
            /// Creates a new `HistoryMessage`.
            ///
            /// - Parameters:
            ///   - content:
            ///   - import_id:
            ///   - role:
            public init(
                content: Swift.String,
                import_id: Swift.String? = nil,
                role: Components.Schemas.HistoryMessage.rolePayload
            ) {
                self.content = content
                self.import_id = import_id
                self.role = role
            }
            public enum CodingKeys: String, CodingKey {
                case content
                case import_id
                case role
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionStartRequest`.
        @frozen public enum SessionStartRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1`.
            public struct Case1Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/history`.
                public var history: [Components.Schemas.HistoryMessage]?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/time_limit_s`.
                public var time_limit_s: Swift.Double?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/voice_override`.
                public var voice_override: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/llm`.
                public var llm: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/persona`.
                public var persona: Swift.String?
                /// save session messages
                ///
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/save_messages`.
                public var save_messages: Swift.Bool?
                /// reserved for internal use
                ///
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1/_extra`.
                public var _extra: OpenAPIRuntime.OpenAPIObjectContainer?
                /// Creates a new `Case1Payload`.
                ///
                /// - Parameters:
                ///   - history:
                ///   - time_limit_s:
                ///   - voice_override:
                ///   - llm:
                ///   - persona:
                ///   - save_messages: save session messages
                ///   - _extra: reserved for internal use
                public init(
                    history: [Components.Schemas.HistoryMessage]? = nil,
                    time_limit_s: Swift.Double? = nil,
                    voice_override: Swift.String? = nil,
                    llm: Swift.String? = nil,
                    persona: Swift.String? = nil,
                    save_messages: Swift.Bool? = nil,
                    _extra: OpenAPIRuntime.OpenAPIObjectContainer? = nil
                ) {
                    self.history = history
                    self.time_limit_s = time_limit_s
                    self.voice_override = voice_override
                    self.llm = llm
                    self.persona = persona
                    self.save_messages = save_messages
                    self._extra = _extra
                }
                public enum CodingKeys: String, CodingKey {
                    case history
                    case time_limit_s
                    case voice_override
                    case llm
                    case persona
                    case save_messages
                    case _extra
                }
            }
            /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case1`.
            case case1(Components.Schemas.SessionStartRequest.Case1Payload)
            /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2`.
            public struct Case2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/time_limit_s`.
                public var time_limit_s: Swift.Double?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/voice_override`.
                public var voice_override: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/llm`.
                public var llm: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/scenario`.
                public var scenario: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/persona`.
                public var persona: Swift.String?
                /// save session messages
                ///
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/save_messages`.
                public var save_messages: Swift.Bool?
                /// reserved for internal use
                ///
                /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2/_extra`.
                public var _extra: OpenAPIRuntime.OpenAPIObjectContainer?
                /// Creates a new `Case2Payload`.
                ///
                /// - Parameters:
                ///   - time_limit_s:
                ///   - voice_override:
                ///   - llm:
                ///   - scenario:
                ///   - persona:
                ///   - save_messages: save session messages
                ///   - _extra: reserved for internal use
                public init(
                    time_limit_s: Swift.Double? = nil,
                    voice_override: Swift.String? = nil,
                    llm: Swift.String? = nil,
                    scenario: Swift.String? = nil,
                    persona: Swift.String? = nil,
                    save_messages: Swift.Bool? = nil,
                    _extra: OpenAPIRuntime.OpenAPIObjectContainer? = nil
                ) {
                    self.time_limit_s = time_limit_s
                    self.voice_override = voice_override
                    self.llm = llm
                    self.scenario = scenario
                    self.persona = persona
                    self.save_messages = save_messages
                    self._extra = _extra
                }
                public enum CodingKeys: String, CodingKey {
                    case time_limit_s
                    case voice_override
                    case llm
                    case scenario
                    case persona
                    case save_messages
                    case _extra
                }
            }
            /// - Remark: Generated from `#/components/schemas/SessionStartRequest/case2`.
            case case2(Components.Schemas.SessionStartRequest.Case2Payload)
            public init(from decoder: any Decoder) throws {
                var errors: [any Error] = []
                do {
                    self = .case1(try .init(from: decoder))
                    return
                } catch {
                    errors.append(error)
                }
                do {
                    self = .case2(try .init(from: decoder))
                    return
                } catch {
                    errors.append(error)
                }
                throw Swift.DecodingError.failedToDecodeOneOfSchema(
                    type: Self.self,
                    codingPath: decoder.codingPath,
                    errors: errors
                )
            }
            public func encode(to encoder: any Encoder) throws {
                switch self {
                case let .case1(value):
                    try value.encode(to: encoder)
                case let .case2(value):
                    try value.encode(to: encoder)
                }
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionState`.
        @frozen public enum SessionState: String, Codable, Hashable, Sendable, CaseIterable {
            case ended = "ended"
            case in_progress = "in_progress"
            case not_started = "not_started"
        }
        /// - Remark: Generated from `#/components/schemas/Session`.
        public struct Session: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Session/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Session/ended_at`.
            public var ended_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/Session/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Session/livekit_room`.
            public var livekit_room: Swift.String
            /// - Remark: Generated from `#/components/schemas/Session/metadata`.
            public var metadata: OpenAPIRuntime.OpenAPIValueContainer
            /// - Remark: Generated from `#/components/schemas/Session/persona`.
            public var persona: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Session/project`.
            public var project: Swift.String
            /// - Remark: Generated from `#/components/schemas/Session/scenario`.
            public var scenario: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Session/llm`.
            public var llm: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Session/state`.
            public var state: Components.Schemas.SessionState
            /// - Remark: Generated from `#/components/schemas/Session/voice_override`.
            public var voice_override: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Session/time_limit_s`.
            public var time_limit_s: Swift.Double?
            /// Creates a new `Session`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - ended_at:
            ///   - id:
            ///   - livekit_room:
            ///   - metadata:
            ///   - persona:
            ///   - project:
            ///   - scenario:
            ///   - llm:
            ///   - state:
            ///   - voice_override:
            ///   - time_limit_s:
            public init(
                created_at: Foundation.Date,
                ended_at: Foundation.Date? = nil,
                id: Swift.String,
                livekit_room: Swift.String,
                metadata: OpenAPIRuntime.OpenAPIValueContainer,
                persona: Swift.String? = nil,
                project: Swift.String,
                scenario: Swift.String? = nil,
                llm: Swift.String? = nil,
                state: Components.Schemas.SessionState,
                voice_override: Swift.String? = nil,
                time_limit_s: Swift.Double? = nil
            ) {
                self.created_at = created_at
                self.ended_at = ended_at
                self.id = id
                self.livekit_room = livekit_room
                self.metadata = metadata
                self.persona = persona
                self.project = project
                self.scenario = scenario
                self.llm = llm
                self.state = state
                self.voice_override = voice_override
                self.time_limit_s = time_limit_s
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case ended_at
                case id
                case livekit_room
                case metadata
                case persona
                case project
                case scenario
                case llm
                case state
                case voice_override
                case time_limit_s
            }
        }
        /// - Remark: Generated from `#/components/schemas/Persona`.
        public struct Persona: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Persona/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Persona/description`.
            public var description: Swift.String
            /// - Remark: Generated from `#/components/schemas/Persona/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Persona/image_url`.
            public var image_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/Persona/name`.
            public var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Persona/project`.
            public var project: Swift.String
            /// - Remark: Generated from `#/components/schemas/Persona/tagsPayload`.
            public struct tagsPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Persona/tagsPayload/human_name`.
                public var human_name: Swift.String
                /// - Remark: Generated from `#/components/schemas/Persona/tagsPayload/name`.
                public var name: Swift.String
                /// Creates a new `tagsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - human_name:
                ///   - name:
                public init(
                    human_name: Swift.String,
                    name: Swift.String
                ) {
                    self.human_name = human_name
                    self.name = name
                }
                public enum CodingKeys: String, CodingKey {
                    case human_name
                    case name
                }
            }
            /// - Remark: Generated from `#/components/schemas/Persona/tags`.
            public typealias tagsPayload = [Components.Schemas.Persona.tagsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/Persona/tags`.
            public var tags: Components.Schemas.Persona.tagsPayload
            /// - Remark: Generated from `#/components/schemas/Persona/voice`.
            public var voice: Swift.String
            /// Creates a new `Persona`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - description:
            ///   - id:
            ///   - image_url:
            ///   - name:
            ///   - project:
            ///   - tags:
            ///   - voice:
            public init(
                created_at: Foundation.Date,
                description: Swift.String,
                id: Swift.String,
                image_url: Swift.String? = nil,
                name: Swift.String,
                project: Swift.String,
                tags: Components.Schemas.Persona.tagsPayload,
                voice: Swift.String
            ) {
                self.created_at = created_at
                self.description = description
                self.id = id
                self.image_url = image_url
                self.name = name
                self.project = project
                self.tags = tags
                self.voice = voice
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case description
                case id
                case image_url
                case name
                case project
                case tags
                case voice
            }
        }
        /// - Remark: Generated from `#/components/schemas/Scenario`.
        public struct Scenario: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Scenario/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Scenario/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Scenario/name`.
            public var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Scenario/project`.
            public var project: Swift.String
            /// - Remark: Generated from `#/components/schemas/Scenario/prompt`.
            public var prompt: Swift.String
            /// Creates a new `Scenario`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - id:
            ///   - name:
            ///   - project:
            ///   - prompt:
            public init(
                created_at: Foundation.Date,
                id: Swift.String,
                name: Swift.String,
                project: Swift.String,
                prompt: Swift.String
            ) {
                self.created_at = created_at
                self.id = id
                self.name = name
                self.project = project
                self.prompt = prompt
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case id
                case name
                case project
                case prompt
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionStartResponse`.
        public struct SessionStartResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionStartResponse/session`.
            public var session: Components.Schemas.Session
            /// - Remark: Generated from `#/components/schemas/SessionStartResponse/persona`.
            public var persona: Components.Schemas.Persona?
            /// - Remark: Generated from `#/components/schemas/SessionStartResponse/scenario`.
            public var scenario: Components.Schemas.Scenario?
            /// - Remark: Generated from `#/components/schemas/SessionStartResponse/connection_details`.
            public struct connection_detailsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SessionStartResponse/connection_details/token`.
                public var token: Swift.String?
                /// - Remark: Generated from `#/components/schemas/SessionStartResponse/connection_details/url`.
                public var url: Swift.String?
                /// Creates a new `connection_detailsPayload`.
                ///
                /// - Parameters:
                ///   - token:
                ///   - url:
                public init(
                    token: Swift.String? = nil,
                    url: Swift.String? = nil
                ) {
                    self.token = token
                    self.url = url
                }
                public enum CodingKeys: String, CodingKey {
                    case token
                    case url
                }
            }
            /// - Remark: Generated from `#/components/schemas/SessionStartResponse/connection_details`.
            public var connection_details: Components.Schemas.SessionStartResponse.connection_detailsPayload
            /// Creates a new `SessionStartResponse`.
            ///
            /// - Parameters:
            ///   - session:
            ///   - persona:
            ///   - scenario:
            ///   - connection_details:
            public init(
                session: Components.Schemas.Session,
                persona: Components.Schemas.Persona? = nil,
                scenario: Components.Schemas.Scenario? = nil,
                connection_details: Components.Schemas.SessionStartResponse.connection_detailsPayload
            ) {
                self.session = session
                self.persona = persona
                self.scenario = scenario
                self.connection_details = connection_details
            }
            public enum CodingKeys: String, CodingKey {
                case session
                case persona
                case scenario
                case connection_details
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateSessionRequest`.
        public struct UpdateSessionRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateSessionRequest/time_limit_s`.
            public var time_limit_s: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/UpdateSessionRequest/voice_override`.
            public var voice_override: Swift.String?
            /// Creates a new `UpdateSessionRequest`.
            ///
            /// - Parameters:
            ///   - time_limit_s:
            ///   - voice_override:
            public init(
                time_limit_s: Swift.Double? = nil,
                voice_override: Swift.String? = nil
            ) {
                self.time_limit_s = time_limit_s
                self.voice_override = voice_override
            }
            public enum CodingKeys: String, CodingKey {
                case time_limit_s
                case voice_override
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionMessage`.
        public struct SessionMessage: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionMessage/agent`.
            public var agent: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SessionMessage/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/SessionMessage/deleted_at`.
            public var deleted_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SessionMessage/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionMessage/import_id`.
            public var import_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SessionMessage/media`.
            public var media: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SessionMessage/session`.
            public var session: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionMessage/speaking_ended_at`.
            public var speaking_ended_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/SessionMessage/text`.
            public var text: Swift.String?
            /// Creates a new `SessionMessage`.
            ///
            /// - Parameters:
            ///   - agent:
            ///   - created_at:
            ///   - deleted_at:
            ///   - id:
            ///   - import_id:
            ///   - media:
            ///   - session:
            ///   - speaking_ended_at:
            ///   - text:
            public init(
                agent: Swift.Bool,
                created_at: Foundation.Date,
                deleted_at: Foundation.Date? = nil,
                id: Swift.String,
                import_id: Swift.String? = nil,
                media: Swift.String? = nil,
                session: Swift.String,
                speaking_ended_at: Foundation.Date,
                text: Swift.String? = nil
            ) {
                self.agent = agent
                self.created_at = created_at
                self.deleted_at = deleted_at
                self.id = id
                self.import_id = import_id
                self.media = media
                self.session = session
                self.speaking_ended_at = speaking_ended_at
                self.text = text
            }
            public enum CodingKeys: String, CodingKey {
                case agent
                case created_at
                case deleted_at
                case id
                case import_id
                case media
                case session
                case speaking_ended_at
                case text
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionTimelineItem`.
        public struct SessionTimelineItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionTimelineItem/seconds`.
            public var seconds: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/SessionTimelineItem/type`.
            @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case silence = "silence"
                case agent = "agent"
                case user = "user"
            }
            /// - Remark: Generated from `#/components/schemas/SessionTimelineItem/type`.
            public var _type: Components.Schemas.SessionTimelineItem._typePayload?
            /// Creates a new `SessionTimelineItem`.
            ///
            /// - Parameters:
            ///   - seconds:
            ///   - _type:
            public init(
                seconds: Swift.Double? = nil,
                _type: Components.Schemas.SessionTimelineItem._typePayload? = nil
            ) {
                self.seconds = seconds
                self._type = _type
            }
            public enum CodingKeys: String, CodingKey {
                case seconds
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/Voice`.
        public struct Voice: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Voice/created_at`.
            public var created_at: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/Voice/id`.
            public var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Voice/name`.
            public var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/Voice/language`.
            public var language: Swift.String
            /// Creates a new `Voice`.
            ///
            /// - Parameters:
            ///   - created_at:
            ///   - id:
            ///   - name:
            ///   - language:
            public init(
                created_at: Foundation.Date,
                id: Swift.String,
                name: Swift.String,
                language: Swift.String
            ) {
                self.created_at = created_at
                self.id = id
                self.name = name
                self.language = language
            }
            public enum CodingKeys: String, CodingKey {
                case created_at
                case id
                case name
                case language
            }
        }
        /// - Remark: Generated from `#/components/schemas/VoicePreviewRequest`.
        public struct VoicePreviewRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/VoicePreviewRequest/voice`.
            public var voice: Swift.String
            /// Creates a new `VoicePreviewRequest`.
            ///
            /// - Parameters:
            ///   - voice:
            public init(voice: Swift.String) {
                self.voice = voice
            }
            public enum CodingKeys: String, CodingKey {
                case voice
            }
        }
        /// - Remark: Generated from `#/components/schemas/UsageType`.
        @frozen public enum UsageType: String, Codable, Hashable, Sendable, CaseIterable {
            case conversational_seconds = "conversational_seconds"
            case voice_synthesis_seconds = "voice_synthesis_seconds"
            case token_cnt = "token_cnt"
        }
        /// - Remark: Generated from `#/components/schemas/UsageLimits`.
        public struct UsageLimitsPayload: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UsageLimits/type`.
            public var _type: Components.Schemas.UsageType
            /// - Remark: Generated from `#/components/schemas/UsageLimits/value`.
            public var value: Swift.Double
            /// Creates a new `UsageLimitsPayload`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - value:
            public init(
                _type: Components.Schemas.UsageType,
                value: Swift.Double
            ) {
                self._type = _type
                self.value = value
            }
            public enum CodingKeys: String, CodingKey {
                case _type = "type"
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/UsageLimits`.
        public typealias UsageLimits = [Components.Schemas.UsageLimitsPayload]
        /// - Remark: Generated from `#/components/schemas/UpdateUsageLimitsRequest`.
        public struct UpdateUsageLimitsRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateUsageLimitsRequest/limits`.
            public var limits: Components.Schemas.UsageLimits
            /// The ID of the human that the token is for. (this is typically your user id from your system)
            ///
            /// - Remark: Generated from `#/components/schemas/UpdateUsageLimitsRequest/human_id`.
            public var human_id: Swift.String
            /// Creates a new `UpdateUsageLimitsRequest`.
            ///
            /// - Parameters:
            ///   - limits:
            ///   - human_id: The ID of the human that the token is for. (this is typically your user id from your system)
            public init(
                limits: Components.Schemas.UsageLimits,
                human_id: Swift.String
            ) {
                self.limits = limits
                self.human_id = human_id
            }
            public enum CodingKeys: String, CodingKey {
                case limits
                case human_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/TokenRequest`.
        public struct TokenRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TokenRequest/limits`.
            public var limits: Components.Schemas.UsageLimits
            /// The ID of the human that the token is for. (this is typically your user id from your system)
            ///
            /// - Remark: Generated from `#/components/schemas/TokenRequest/human_id`.
            public var human_id: Swift.String
            /// Creates a new `TokenRequest`.
            ///
            /// - Parameters:
            ///   - limits:
            ///   - human_id: The ID of the human that the token is for. (this is typically your user id from your system)
            public init(
                limits: Components.Schemas.UsageLimits,
                human_id: Swift.String
            ) {
                self.limits = limits
                self.human_id = human_id
            }
            public enum CodingKeys: String, CodingKey {
                case limits
                case human_id
            }
        }
        /// - Remark: Generated from `#/components/schemas/WebhookBase`.
        public struct WebhookBase: Codable, Hashable, Sendable {
            /// The type of the event
            ///
            /// - Remark: Generated from `#/components/schemas/WebhookBase/type`.
            public var _type: Swift.String
            /// The event-specific data
            ///
            /// - Remark: Generated from `#/components/schemas/WebhookBase/payload`.
            public struct payloadPayload: Codable, Hashable, Sendable {
                /// A container of undocumented properties.
                public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
                /// Creates a new `payloadPayload`.
                ///
                /// - Parameters:
                ///   - additionalProperties: A container of undocumented properties.
                public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
                    self.additionalProperties = additionalProperties
                }
                public init(from decoder: any Decoder) throws {
                    additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                }
                public func encode(to encoder: any Encoder) throws {
                    try encoder.encodeAdditionalProperties(additionalProperties)
                }
            }
            /// The event-specific data
            ///
            /// - Remark: Generated from `#/components/schemas/WebhookBase/payload`.
            public var payload: Components.Schemas.WebhookBase.payloadPayload
            /// The timestamp of the event. This can be used for security purposes to reject old events and prevent replay attacks
            ///
            /// - Remark: Generated from `#/components/schemas/WebhookBase/timestamp`.
            public var timestamp: Foundation.Date
            /// Creates a new `WebhookBase`.
            ///
            /// - Parameters:
            ///   - _type: The type of the event
            ///   - payload: The event-specific data
            ///   - timestamp: The timestamp of the event. This can be used for security purposes to reject old events and prevent replay attacks
            public init(
                _type: Swift.String,
                payload: Components.Schemas.WebhookBase.payloadPayload,
                timestamp: Foundation.Date
            ) {
                self._type = _type
                self.payload = payload
                self.timestamp = timestamp
            }
            public enum CodingKeys: String, CodingKey {
                case _type = "type"
                case payload
                case timestamp
            }
        }
        /// - Remark: Generated from `#/components/schemas/UsageTracked`.
        public struct UsageTracked: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UsageTracked/value1`.
            public var value1: Components.Schemas.WebhookBase
            /// Called when usage occurs
            ///
            /// - Remark: Generated from `#/components/schemas/UsageTracked/value2`.
            public struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/type`.
                @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case usage_period_tracked = "usage.tracked"
                }
                /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/type`.
                public var _type: Components.Schemas.UsageTracked.Value2Payload._typePayload
                /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/payload`.
                public struct payloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/payload/human_id`.
                    public var human_id: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/payload/type`.
                    public var _type: Components.Schemas.UsageType
                    /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/payload/value`.
                    public var value: Swift.Double
                    /// Creates a new `payloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - human_id:
                    ///   - _type:
                    ///   - value:
                    public init(
                        human_id: Swift.String? = nil,
                        _type: Components.Schemas.UsageType,
                        value: Swift.Double
                    ) {
                        self.human_id = human_id
                        self._type = _type
                        self.value = value
                    }
                    public enum CodingKeys: String, CodingKey {
                        case human_id
                        case _type = "type"
                        case value
                    }
                }
                /// - Remark: Generated from `#/components/schemas/UsageTracked/value2/payload`.
                public var payload: Components.Schemas.UsageTracked.Value2Payload.payloadPayload
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - payload:
                public init(
                    _type: Components.Schemas.UsageTracked.Value2Payload._typePayload,
                    payload: Components.Schemas.UsageTracked.Value2Payload.payloadPayload
                ) {
                    self._type = _type
                    self.payload = payload
                }
                public enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case payload
                }
            }
            /// Called when usage occurs
            ///
            /// - Remark: Generated from `#/components/schemas/UsageTracked/value2`.
            public var value2: Components.Schemas.UsageTracked.Value2Payload
            /// Creates a new `UsageTracked`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2: Called when usage occurs
            public init(
                value1: Components.Schemas.WebhookBase,
                value2: Components.Schemas.UsageTracked.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            public init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            public func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
        /// - Remark: Generated from `#/components/schemas/Test`.
        public struct Test: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Test/value1`.
            public var value1: Components.Schemas.WebhookBase
            /// Called as a test webhook triggered in the Gabber dashboard
            ///
            /// - Remark: Generated from `#/components/schemas/Test/value2`.
            public struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Test/value2/type`.
                @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case test = "test"
                }
                /// - Remark: Generated from `#/components/schemas/Test/value2/type`.
                public var _type: Components.Schemas.Test.Value2Payload._typePayload
                /// - Remark: Generated from `#/components/schemas/Test/value2/payload`.
                public struct payloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Test/value2/payload/msg`.
                    public var msg: Swift.String
                    /// Creates a new `payloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - msg:
                    public init(msg: Swift.String) {
                        self.msg = msg
                    }
                    public enum CodingKeys: String, CodingKey {
                        case msg
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Test/value2/payload`.
                public var payload: Components.Schemas.Test.Value2Payload.payloadPayload
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - payload:
                public init(
                    _type: Components.Schemas.Test.Value2Payload._typePayload,
                    payload: Components.Schemas.Test.Value2Payload.payloadPayload
                ) {
                    self._type = _type
                    self.payload = payload
                }
                public enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case payload
                }
            }
            /// Called as a test webhook triggered in the Gabber dashboard
            ///
            /// - Remark: Generated from `#/components/schemas/Test/value2`.
            public var value2: Components.Schemas.Test.Value2Payload
            /// Creates a new `Test`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2: Called as a test webhook triggered in the Gabber dashboard
            public init(
                value1: Components.Schemas.WebhookBase,
                value2: Components.Schemas.Test.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            public init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            public func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionStatus`.
        public struct SessionStatus: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionStatus/value1`.
            public var value1: Components.Schemas.WebhookBase
            /// Called when usage occurs
            ///
            /// - Remark: Generated from `#/components/schemas/SessionStatus/value2`.
            public struct Value2Payload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/type`.
                @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case session_period_status = "session.status"
                }
                /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/type`.
                public var _type: Components.Schemas.SessionStatus.Value2Payload._typePayload
                /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/payload`.
                public struct payloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/payload/human_id`.
                    public var human_id: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/payload/state`.
                    public var state: Components.Schemas.SessionState?
                    /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/payload/session_id`.
                    public var session_id: Swift.String?
                    /// Creates a new `payloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - human_id:
                    ///   - state:
                    ///   - session_id:
                    public init(
                        human_id: Swift.String? = nil,
                        state: Components.Schemas.SessionState? = nil,
                        session_id: Swift.String? = nil
                    ) {
                        self.human_id = human_id
                        self.state = state
                        self.session_id = session_id
                    }
                    public enum CodingKeys: String, CodingKey {
                        case human_id
                        case state
                        case session_id
                    }
                }
                /// - Remark: Generated from `#/components/schemas/SessionStatus/value2/payload`.
                public var payload: Components.Schemas.SessionStatus.Value2Payload.payloadPayload
                /// Creates a new `Value2Payload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - payload:
                public init(
                    _type: Components.Schemas.SessionStatus.Value2Payload._typePayload,
                    payload: Components.Schemas.SessionStatus.Value2Payload.payloadPayload
                ) {
                    self._type = _type
                    self.payload = payload
                }
                public enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case payload
                }
            }
            /// Called when usage occurs
            ///
            /// - Remark: Generated from `#/components/schemas/SessionStatus/value2`.
            public var value2: Components.Schemas.SessionStatus.Value2Payload
            /// Creates a new `SessionStatus`.
            ///
            /// - Parameters:
            ///   - value1:
            ///   - value2: Called when usage occurs
            public init(
                value1: Components.Schemas.WebhookBase,
                value2: Components.Schemas.SessionStatus.Value2Payload
            ) {
                self.value1 = value1
                self.value2 = value2
            }
            public init(from decoder: any Decoder) throws {
                value1 = try .init(from: decoder)
                value2 = try .init(from: decoder)
            }
            public func encode(to encoder: any Encoder) throws {
                try value1.encode(to: encoder)
                try value2.encode(to: encoder)
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {
        public struct BadRequest: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/BadRequest/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/BadRequest/content/json`.
                @frozen public enum jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case1`.
                    public struct Case1Payload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case1/type`.
                        @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case usage_limit_exceeded = "usage_limit_exceeded"
                        }
                        /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case1/type`.
                        public var _type: Components.Responses.BadRequest.Body.jsonPayload.Case1Payload._typePayload?
                        /// Creates a new `Case1Payload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        public init(_type: Components.Responses.BadRequest.Body.jsonPayload.Case1Payload._typePayload? = nil) {
                            self._type = _type
                        }
                        public enum CodingKeys: String, CodingKey {
                            case _type = "type"
                        }
                    }
                    /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case1`.
                    case case1(Components.Responses.BadRequest.Body.jsonPayload.Case1Payload)
                    /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case2`.
                    public struct Case2Payload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case2/type`.
                        @frozen public enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case project_disabled = "project_disabled"
                        }
                        /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case2/type`.
                        public var _type: Components.Responses.BadRequest.Body.jsonPayload.Case2Payload._typePayload?
                        /// Creates a new `Case2Payload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        public init(_type: Components.Responses.BadRequest.Body.jsonPayload.Case2Payload._typePayload? = nil) {
                            self._type = _type
                        }
                        public enum CodingKeys: String, CodingKey {
                            case _type = "type"
                        }
                    }
                    /// - Remark: Generated from `#/components/responses/BadRequest/content/json/case2`.
                    case case2(Components.Responses.BadRequest.Body.jsonPayload.Case2Payload)
                    public init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            self = .case1(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .case2(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        throw Swift.DecodingError.failedToDecodeOneOfSchema(
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    public func encode(to encoder: any Encoder) throws {
                        switch self {
                        case let .case1(value):
                            try value.encode(to: encoder)
                        case let .case2(value):
                            try value.encode(to: encoder)
                        }
                    }
                }
                /// - Remark: Generated from `#/components/responses/BadRequest/content/application\/json`.
                case json(Components.Responses.BadRequest.Body.jsonPayload)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Responses.BadRequest.Body.jsonPayload {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.BadRequest.Body
            /// Creates a new `BadRequest`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.BadRequest.Body) {
                self.body = body
            }
        }
    }
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Create a new session
    ///
    /// Creates a new session based on the input request data
    ///
    /// - Remark: HTTP `POST /api/v1/session/start`.
    /// - Remark: Generated from `#/paths//api/v1/session/start/post`.
    public enum post_sol_api_sol_v1_sol_session_sol_start {
        public static let id: Swift.String = "post/api/v1/session/start"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/start/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_session_sol_start.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_session_sol_start.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/session/start/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/start/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SessionStartRequest)
            }
            public var body: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Headers = .init(),
                body: Operations.post_sol_api_sol_v1_sol_session_sol_start.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/start/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/start/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.SessionStartResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.SessionStartResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Session created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/start/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/start/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/start/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/start/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_session_sol_start.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a session by id
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get`.
    public enum get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_ {
        public static let id: Swift.String = "get/api/v1/session/{session_id}"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/GET/path/session_id`.
                public var session_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - session_id:
                public init(session_id: Swift.String) {
                    self.session_id = session_id
                }
            }
            public var path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path,
                headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Session)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.Session {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Session created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a session by id
    ///
    /// - Remark: HTTP `PUT /api/v1/session/{session_id}`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put`.
    public enum put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_ {
        public static let id: Swift.String = "put/api/v1/session/{session_id}"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/path/session_id`.
                public var session_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - session_id:
                public init(session_id: Swift.String) {
                    self.session_id = session_id
                }
            }
            public var path: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateSessionRequest)
            }
            public var body: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Path,
                headers: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Headers = .init(),
                body: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// Creates a new `jsonPayload`.
                        public init() {}
                        public init(from decoder: any Decoder) throws {
                            try decoder.ensureNoAdditionalProperties(knownKeys: [])
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/PUT/responses/200/content/application\/json`.
                    case json(Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Session updated successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/put/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.put_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub_.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get session messages
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/messages`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get`.
    public enum get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages {
        public static let id: Swift.String = "get/api/v1/session/{session_id}/messages"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/path/session_id`.
                public var session_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - session_id:
                public init(session_id: Swift.String) {
                    self.session_id = session_id
                }
            }
            public var path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Path,
                headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// The token for the next page of results, or null if there are no more pages.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content/json/next_page`.
                        public var next_page: Swift.String?
                        /// The total number of items available.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content/json/total_count`.
                        public var total_count: Swift.Double
                        /// The array of session timeline items.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content/json/values`.
                        public var values: [Components.Schemas.SessionMessage]
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - next_page: The token for the next page of results, or null if there are no more pages.
                        ///   - total_count: The total number of items available.
                        ///   - values: The array of session timeline items.
                        public init(
                            next_page: Swift.String? = nil,
                            total_count: Swift.Double,
                            values: [Components.Schemas.SessionMessage]
                        ) {
                            self.next_page = next_page
                            self.total_count = total_count
                            self.values = values
                        }
                        public enum CodingKeys: String, CodingKey {
                            case next_page
                            case total_count
                            case values
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/messages/GET/responses/200/content/application\/json`.
                    case json(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of session messages
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/messages/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_messages.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a session timeline
    ///
    /// - Remark: HTTP `GET /api/v1/session/{session_id}/timeline`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get`.
    public enum get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline {
        public static let id: Swift.String = "get/api/v1/session/{session_id}/timeline"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/path/session_id`.
                public var session_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - session_id:
                public init(session_id: Swift.String) {
                    self.session_id = session_id
                }
            }
            public var path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Path,
                headers: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// The token for the next page of results, or null if there are no more pages.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content/json/next_page`.
                        public var next_page: Swift.String?
                        /// The total number of items available.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content/json/total_count`.
                        public var total_count: Swift.Double?
                        /// The array of session timeline items.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content/json/values`.
                        public var values: [Components.Schemas.SessionTimelineItem]?
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - next_page: The token for the next page of results, or null if there are no more pages.
                        ///   - total_count: The total number of items available.
                        ///   - values: The array of session timeline items.
                        public init(
                            next_page: Swift.String? = nil,
                            total_count: Swift.Double? = nil,
                            values: [Components.Schemas.SessionTimelineItem]? = nil
                        ) {
                            self.next_page = next_page
                            self.total_count = total_count
                            self.values = values
                        }
                        public enum CodingKeys: String, CodingKey {
                            case next_page
                            case total_count
                            case values
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/timeline/GET/responses/200/content/application\/json`.
                    case json(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Session created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/timeline/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_timeline.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of personas
    ///
    /// - Remark: HTTP `GET /api/v1/persona/list`.
    /// - Remark: Generated from `#/paths//api/v1/persona/list/get`.
    public enum get_sol_api_sol_v1_sol_persona_sol_list {
        public static let id: Swift.String = "get/api/v1/persona/list"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_persona_sol_list.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_persona_sol_list.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// The token for the next page of results, or null if there are no more pages.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content/json/next_page`.
                        public var next_page: Swift.String?
                        /// The total number of items available.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content/json/total_count`.
                        public var total_count: Swift.Double
                        /// The array of personas.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content/json/values`.
                        public var values: [Components.Schemas.Persona]
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - next_page: The token for the next page of results, or null if there are no more pages.
                        ///   - total_count: The total number of items available.
                        ///   - values: The array of personas.
                        public init(
                            next_page: Swift.String? = nil,
                            total_count: Swift.Double,
                            values: [Components.Schemas.Persona]
                        ) {
                            self.next_page = next_page
                            self.total_count = total_count
                            self.values = values
                        }
                        public enum CodingKeys: String, CodingKey {
                            case next_page
                            case total_count
                            case values
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/persona/list/GET/responses/200/content/application\/json`.
                    case json(Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of personas
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/list/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/list/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_persona_sol_list.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of scenarios
    ///
    /// - Remark: HTTP `GET /api/v1/scenario/list`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/list/get`.
    public enum get_sol_api_sol_v1_sol_scenario_sol_list {
        public static let id: Swift.String = "get/api/v1/scenario/list"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_scenario_sol_list.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_scenario_sol_list.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// The token for the next page of results, or null if there are no more pages.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content/json/next_page`.
                        public var next_page: Swift.String?
                        /// The total number of items available.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content/json/total_count`.
                        public var total_count: Swift.Double
                        /// The array of scenarios.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content/json/values`.
                        public var values: [Components.Schemas.Scenario]
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - next_page: The token for the next page of results, or null if there are no more pages.
                        ///   - total_count: The total number of items available.
                        ///   - values: The array of scenarios.
                        public init(
                            next_page: Swift.String? = nil,
                            total_count: Swift.Double,
                            values: [Components.Schemas.Scenario]
                        ) {
                            self.next_page = next_page
                            self.total_count = total_count
                            self.values = values
                        }
                        public enum CodingKeys: String, CodingKey {
                            case next_page
                            case total_count
                            case values
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/scenario/list/GET/responses/200/content/application\/json`.
                    case json(Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of scenarios
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/list/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/list/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_scenario_sol_list.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a list of voices
    ///
    /// - Remark: HTTP `GET /api/v1/voice/list`.
    /// - Remark: Generated from `#/paths//api/v1/voice/list/get`.
    public enum get_sol_api_sol_v1_sol_voice_sol_list {
        public static let id: Swift.String = "get/api/v1/voice/list"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_voice_sol_list.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_voice_sol_list.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// The token for the next page of results, or null if there are no more pages.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content/json/next_page`.
                        public var next_page: Swift.String?
                        /// The total number of items available.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content/json/total_count`.
                        public var total_count: Swift.Double
                        /// The array of voices.
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content/json/values`.
                        public var values: [Components.Schemas.Voice]
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - next_page: The token for the next page of results, or null if there are no more pages.
                        ///   - total_count: The total number of items available.
                        ///   - values: The array of voices.
                        public init(
                            next_page: Swift.String? = nil,
                            total_count: Swift.Double,
                            values: [Components.Schemas.Voice]
                        ) {
                            self.next_page = next_page
                            self.total_count = total_count
                            self.values = values
                        }
                        public enum CodingKeys: String, CodingKey {
                            case next_page
                            case total_count
                            case values
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/voice/list/GET/responses/200/content/application\/json`.
                    case json(Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of voices
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/list/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/list/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/list/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_voice_sol_list.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Preview a voice
    ///
    /// Previews a voice based on the input text
    ///
    /// - Remark: HTTP `POST /api/v1/voice/preview`.
    /// - Remark: Generated from `#/paths//api/v1/voice/preview/post`.
    public enum post_sol_api_sol_v1_sol_voice_sol_preview {
        public static let id: Swift.String = "post/api/v1/voice/preview"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/voice/preview/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_preview.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_preview.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/voice/preview/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/preview/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.VoicePreviewRequest)
            }
            public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Headers = .init(),
                body: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/preview/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/preview/POST/responses/200/content/audio\/mpeg`.
                    case audio_mpeg(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.audio_mpeg`.
                    ///
                    /// - Throws: An error if `self` is not `.audio_mpeg`.
                    /// - SeeAlso: `.audio_mpeg`.
                    public var audio_mpeg: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .audio_mpeg(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Returns MP3 data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/preview/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/preview/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/preview/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/preview/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_voice_sol_preview.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case audio_mpeg
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "audio/mpeg":
                    self = .audio_mpeg
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .audio_mpeg:
                    return "audio/mpeg"
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .audio_mpeg,
                    .json
                ]
            }
        }
    }
    /// End a session
    ///
    /// - Remark: HTTP `POST /api/v1/session/{session_id}/end`.
    /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post`.
    public enum post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end {
        public static let id: Swift.String = "post/api/v1/session/{session_id}/end"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/end/POST/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/end/POST/path/session_id`.
                public var session_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - session_id:
                public init(session_id: Swift.String) {
                    self.session_id = session_id
                }
            }
            public var path: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/end/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Path,
                headers: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/end/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/session/{session_id}/end/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.Session)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.Session {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Session created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct TooManyRequests: Sendable, Hashable {
                /// Creates a new `TooManyRequests`.
                public init() {}
            }
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.TooManyRequests)
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            public static var tooManyRequests: Self {
                .tooManyRequests(.init())
            }
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            public var tooManyRequests: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/session/{session_id}/end/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_session_sol__lcub_session_id_rcub__sol_end.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Request new human token
    ///
    /// Requests a token for a human
    ///
    /// - Remark: HTTP `POST /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/post`.
    public enum post_sol_api_sol_v1_sol_usage_sol_token {
        public static let id: Swift.String = "post/api/v1/usage/token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_usage_sol_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_usage_sol_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.TokenRequest)
            }
            public var body: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Headers = .init(),
                body: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/responses/200/content/json/token`.
                        public var token: Swift.String
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - token:
                        public init(token: Swift.String) {
                            self.token = token
                        }
                        public enum CodingKeys: String, CodingKey {
                            case token
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/usage/token/POST/responses/200/content/application\/json`.
                    case json(Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Token created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct TooManyRequests: Sendable, Hashable {
                /// Creates a new `TooManyRequests`.
                public init() {}
            }
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.TooManyRequests)
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            public static var tooManyRequests: Self {
                .tooManyRequests(.init())
            }
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            public var tooManyRequests: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_usage_sol_token.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update human usage limits
    ///
    /// Updates the usage limits of a human
    ///
    /// - Remark: HTTP `PUT /api/v1/usage/token`.
    /// - Remark: Generated from `#/paths//api/v1/usage/token/put`.
    public enum put_sol_api_sol_v1_sol_usage_sol_token {
        public static let id: Swift.String = "put/api/v1/usage/token"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.put_sol_api_sol_v1_sol_usage_sol_token.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.put_sol_api_sol_v1_sol_usage_sol_token.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateUsageLimitsRequest)
            }
            public var body: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Headers = .init(),
                body: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// Creates a new `jsonPayload`.
                        public init() {}
                        public init(from decoder: any Decoder) throws {
                            try decoder.ensureNoAdditionalProperties(knownKeys: [])
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/usage/token/PUT/responses/200/content/application\/json`.
                    case json(Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Usage limits updated successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct TooManyRequests: Sendable, Hashable {
                /// Creates a new `TooManyRequests`.
                public init() {}
            }
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.TooManyRequests)
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            public static var tooManyRequests: Self {
                .tooManyRequests(.init())
            }
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            public var tooManyRequests: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/token/put/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.put_sol_api_sol_v1_sol_usage_sol_token.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get usage limits
    ///
    /// Gets the usage limits of a token
    ///
    /// - Remark: HTTP `GET /api/v1/usage/limits`.
    /// - Remark: Generated from `#/paths//api/v1/usage/limits/get`.
    public enum get_sol_api_sol_v1_sol_usage_sol_limits {
        public static let id: Swift.String = "get/api/v1/usage/limits"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/usage/limits/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_usage_sol_limits.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.get_sol_api_sol_v1_sol_usage_sol_limits.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/usage/limits/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/usage/limits/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UsageLimits)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.UsageLimits {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Token created successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct TooManyRequests: Sendable, Hashable {
                /// Creates a new `TooManyRequests`.
                public init() {}
            }
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.TooManyRequests)
            /// Usage limit exceeded
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            public static var tooManyRequests: Self {
                .tooManyRequests(.init())
            }
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            public var tooManyRequests: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/usage/limits/get/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.get_sol_api_sol_v1_sol_usage_sol_limits.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Clone a voice
    ///
    /// Creates a new cloned voice based on the input audio file
    ///
    /// - Remark: HTTP `POST /api/v1/voice/clone`.
    /// - Remark: Generated from `#/paths//api/v1/voice/clone/post`.
    public enum post_sol_api_sol_v1_sol_voice_sol_clone {
        public static let id: Swift.String = "post/api/v1/voice/clone"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody/multipartForm`.
                @frozen public enum multipartFormPayload: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody/multipartForm/name`.
                    public struct namePayload: Sendable, Hashable {
                        public var body: OpenAPIRuntime.HTTPBody
                        /// Creates a new `namePayload`.
                        ///
                        /// - Parameters:
                        ///   - body:
                        public init(body: OpenAPIRuntime.HTTPBody) {
                            self.body = body
                        }
                    }
                    case name(OpenAPIRuntime.MultipartPart<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body.multipartFormPayload.namePayload>)
                    /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody/multipartForm/language`.
                    public struct languagePayload: Sendable, Hashable {
                        public var body: OpenAPIRuntime.HTTPBody
                        /// Creates a new `languagePayload`.
                        ///
                        /// - Parameters:
                        ///   - body:
                        public init(body: OpenAPIRuntime.HTTPBody) {
                            self.body = body
                        }
                    }
                    case language(OpenAPIRuntime.MultipartPart<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body.multipartFormPayload.languagePayload>)
                    /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody/multipartForm/file`.
                    public struct filePayload: Sendable, Hashable {
                        public var body: OpenAPIRuntime.HTTPBody
                        /// Creates a new `filePayload`.
                        ///
                        /// - Parameters:
                        ///   - body:
                        public init(body: OpenAPIRuntime.HTTPBody) {
                            self.body = body
                        }
                    }
                    case file(OpenAPIRuntime.MultipartPart<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body.multipartFormPayload.filePayload>)
                    case undocumented(OpenAPIRuntime.MultipartRawPart)
                }
                /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body.multipartFormPayload>)
            }
            public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Headers = .init(),
                body: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/json/message`.
                        public var message: Swift.String
                        /// Name of the cloned voice
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/json/name`.
                        public var name: Swift.String
                        /// Language of the cloned voice
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/json/language`.
                        public var language: Swift.String
                        /// Unique identifier of the cloned voice
                        ///
                        /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/json/id`.
                        public var id: Swift.String
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - message:
                        ///   - name: Name of the cloned voice
                        ///   - language: Language of the cloned voice
                        ///   - id: Unique identifier of the cloned voice
                        public init(
                            message: Swift.String,
                            name: Swift.String,
                            language: Swift.String,
                            id: Swift.String
                        ) {
                            self.message = message
                            self.name = name
                            self.language = language
                            self.id = id
                        }
                        public enum CodingKeys: String, CodingKey {
                            case message
                            case name
                            case language
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/voice/clone/POST/responses/200/content/application\/json`.
                    case json(Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Voice cloned successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/clone/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/clone/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/clone/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/clone/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_voice_sol_clone.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Generate voice
    ///
    /// Generates speech from input text and specified voice
    ///
    /// - Remark: HTTP `POST /api/v1/voice/generate`.
    /// - Remark: Generated from `#/paths//api/v1/voice/generate/post`.
    public enum post_sol_api_sol_v1_sol_voice_sol_generate {
        public static let id: Swift.String = "post/api/v1/voice/generate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_generate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_api_sol_v1_sol_voice_sol_generate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Headers
            /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// Text to synthesize into voice
                    ///
                    /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/requestBody/json/text`.
                    public var text: Swift.String
                    /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/requestBody/json/voice_id`.
                    public var voice_id: Swift.String
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - text: Text to synthesize into voice
                    ///   - voice_id:
                    public init(
                        text: Swift.String,
                        voice_id: Swift.String
                    ) {
                        self.text = text
                        self.voice_id = voice_id
                    }
                    public enum CodingKeys: String, CodingKey {
                        case text
                        case voice_id
                    }
                }
                /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/requestBody/content/application\/json`.
                case json(Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Body.jsonPayload)
            }
            public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Headers = .init(),
                body: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/generate/POST/responses/200/content/audio\/mpeg`.
                    case audio_mpeg(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.audio_mpeg`.
                    ///
                    /// - Throws: An error if `self` is not `.audio_mpeg`.
                    /// - SeeAlso: `.audio_mpeg`.
                    public var audio_mpeg: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .audio_mpeg(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Returns MP3 data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/generate/post/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/generate/post/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/generate/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/generate/post/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.post_sol_api_sol_v1_sol_voice_sol_generate.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case audio_mpeg
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "audio/mpeg":
                    self = .audio_mpeg
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .audio_mpeg:
                    return "audio/mpeg"
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .audio_mpeg,
                    .json
                ]
            }
        }
    }
    /// Delete a voice
    ///
    /// - Remark: HTTP `DELETE /api/v1/voice/{voice_id}`.
    /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete`.
    public enum delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_ {
        public static let id: Swift.String = "delete/api/v1/voice/{voice_id}"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/path/voice_id`.
                public var voice_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - voice_id:
                public init(voice_id: Swift.String) {
                    self.voice_id = voice_id
                }
            }
            public var path: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Path,
                headers: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/responses/200/content/json/message`.
                        public var message: Swift.String?
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - message:
                        public init(message: Swift.String? = nil) {
                            self.message = message
                        }
                        public enum CodingKeys: String, CodingKey {
                            case message
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/voice/{voice_id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Voice deleted successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// Creates a new `NotFound`.
                public init() {}
            }
            /// Voice not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.NotFound)
            /// Voice not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            public static var notFound: Self {
                .notFound(.init())
            }
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/voice/{voice_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.delete_sol_api_sol_v1_sol_voice_sol__lcub_voice_id_rcub_.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a persona
    ///
    /// - Remark: HTTP `DELETE /api/v1/persona/{persona_id}`.
    /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete`.
    public enum delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_ {
        public static let id: Swift.String = "delete/api/v1/persona/{persona_id}"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/path/persona_id`.
                public var persona_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - persona_id:
                public init(persona_id: Swift.String) {
                    self.persona_id = persona_id
                }
            }
            public var path: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Path,
                headers: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/responses/200/content/json/message`.
                        public var message: Swift.String?
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - message:
                        public init(message: Swift.String? = nil) {
                            self.message = message
                        }
                        public enum CodingKeys: String, CodingKey {
                            case message
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/persona/{persona_id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Persona deleted successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// Creates a new `NotFound`.
                public init() {}
            }
            /// Persona not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.NotFound)
            /// Persona not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            public static var notFound: Self {
                .notFound(.init())
            }
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/persona/{persona_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.delete_sol_api_sol_v1_sol_persona_sol__lcub_persona_id_rcub_.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Delete a scenario
    ///
    /// - Remark: HTTP `DELETE /api/v1/scenario/{scenario_id}`.
    /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete`.
    public enum delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_ {
        public static let id: Swift.String = "delete/api/v1/scenario/{scenario_id}"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/path/scenario_id`.
                public var scenario_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - scenario_id:
                public init(scenario_id: Swift.String) {
                    self.scenario_id = scenario_id
                }
            }
            public var path: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Path
            /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Path,
                headers: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/responses/200/content/json`.
                    public struct jsonPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/responses/200/content/json/message`.
                        public var message: Swift.String?
                        /// Creates a new `jsonPayload`.
                        ///
                        /// - Parameters:
                        ///   - message:
                        public init(message: Swift.String? = nil) {
                            self.message = message
                        }
                        public enum CodingKeys: String, CodingKey {
                            case message
                        }
                    }
                    /// - Remark: Generated from `#/paths/api/v1/scenario/{scenario_id}/DELETE/responses/200/content/application\/json`.
                    case json(Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok.Body.jsonPayload)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok.Body.jsonPayload {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Scenario deleted successfully
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Invalid request data
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// Creates a new `NotFound`.
                public init() {}
            }
            /// Scenario not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.NotFound)
            /// Scenario not found
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            public static var notFound: Self {
                .notFound(.init())
            }
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                public init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.InternalServerError)
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//api/v1/scenario/{scenario_id}/delete/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            public static var internalServerError: Self {
                .internalServerError(.init())
            }
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            public var internalServerError: Operations.delete_sol_api_sol_v1_sol_scenario_sol__lcub_scenario_id_rcub_.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
